// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  email      String   @unique
  name       String?
  googleId   String   @unique
  createdAt  DateTime @default(now())
  urls       Url[]
}

model Url {
  id         String      @id @default(cuid())
  longUrl    String
  shortUrl   String      @unique
  alias      String      @unique
  createdAt  DateTime    @default(now())
  expiresAt  DateTime?
  clicks     Click[]
  analytics  Analytics[]
  topicId    String
  topic      Topic      @relation(fields: [topicId], references: [id])
  userId     String
  user       User        @relation(fields: [userId], references: [id])
}

model Topic {
  id   String @id @default(cuid())
  name String 
  urls Url[]
}

model Analytics {
  id           String   @id @default(cuid())
  urlId        String   
  clicks       Int      @default(0)
  uniqueVisits Int      @default(0)
  osName       String   @default("")
  deviceName   String   @default("")
  lastAccessed DateTime @default(now())
  createdAt    DateTime @default(now())
  url          Url      @relation(fields: [urlId], references: [id])
  @@unique([urlId, osName, deviceName])
}

model Click {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  userAgent  String
  ipAddress  String
  urlId      String
  url        Url      @relation(fields: [urlId], references: [id])
}